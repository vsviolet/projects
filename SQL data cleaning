/*
cleaning data in sql
*/

SELECT * 
FROM portfolio.dbo.Nashville_Housing_Data

-- standardize date format

SELECT SaleDate, CONVERT(Date, SaleDate)
From portfolio.dbo.Nashville_Housing_Data

Update Nashville_Housing_Data
SET SaleDate = CONVERT(Date, SaleDate)

ALTER TABLE Nashville_Housing_Data
Add SaleDateConverted Date; 

UPDATE Nashville_Housing_Data
SET SaleDateCOnverted = CONVERT(Date, SaleDate)


-- Populate property address date

SELECT * 
FROM portfolio.dbo.Nashville_Housing_Data
--WHERE PropertyAddress is null
--order by ParcelID


SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM portfolio.dbo.Nashville_Housing_Data a
JOIN portfolio.dbo.Nashville_Housing_Data b
    on a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]
Where a.PropertyAddress is null 

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM portfolio.dbo.Nashville_Housing_Data a
JOIN portfolio.dbo.Nashville_Housing_Data b
    on a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]
Where a.PropertyAddress is null 

-- Breaking out Address into Individual Columns (Address, City, State)

SELECT PropertyAddress 
FROM portfolio.dbo.Nashville_Housing_Data
--WHERE PropertyAddress is null
--order by ParcelID


SELECT 
PARSENAME(REPLACE(PropertyAddress, ',', '.') , 2)
 ,PARSENAME(REPLACE(PropertyAddress, ',', '.') , 1)
FROM portfolio.dbo.Nashville_Housing_Data


ALTER TABLE Nashville_Housing_Data
Add PropertySplitAddress Nvarchar(255); 

Update Nashville_Housing_Data
SET PropertySplitAddress = PARSENAME(REPLACE(PropertyAddress, ',', '.') , 2)

ALTER TABLE Nashville_Housing_Data
Add PropertySplitCity Nvarchar(255);

Update Nashville_Housing_Data
SET PropertySplitCity = PARSENAME(REPLACE(PropertyAddress, ',', '.') , 1)



SELECT * 
FROM portfolio.dbo.Nashville_Housing_Data


SELECT OwnerAddress
FROM portfolio.dbo.Nashville_Housing_Data


Select 
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
FROM portfolio.dbo.Nashville_Housing_Data


ALTER TABLE Nashville_Housing_Data
Add OwnerSplitAddress Nvarchar(255); 

Update Nashville_Housing_Data
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)

ALTER TABLE Nashville_Housing_Data
Add OwnerSplitCity Nvarchar(255);

Update Nashville_Housing_Data
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)

ALTER TABLE Nashville_Housing_Data
Add OwnerSplitState Nvarchar(255);

Update Nashville_Housing_Data
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)


SELECT * 
FROM portfolio.dbo.Nashville_Housing_Data


-- Change Y and N to Yes and No in "Sold as Vacant" field

SELECT Distinct(SoldAsVacant), Count(SoldAsVacant)
From portfolio.dbo.Nashville_Housing_Data
Group by SoldAsVacant
order by 2

Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
       When SoldAsVacant = 'N' THEN 'No'
       ELSE SoldAsVacant
       END
From portfolio.dbo.Nashville_Housing_Data


Update Nashville_Housing_Data
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
       When SoldAsVacant = 'N' THEN 'No'
       ELSE SoldAsVacant
       END


-- Remove Duplicates

WITH RowNumCTE AS (
Select *,
    ROW_NUMBER() OVER(
    PARTITION BY ParcelID,
                 PropertyAddress,
                 SalePrice,
                 SaleDate,
                 LegalReference
                 ORDER BY
                    UniqueID
                    ) row_num

From portfolio.dbo.Nashville_Housing_Data
--order by ParcelID
)
Select *
From RowNumCTE
Where row_num > 1
--Order by PropertyAddress



SELECT *
From portfolio.dbo.Nashville_Housing_Data


-- Delete Unused Columns

SELECT *
From portfolio.dbo.Nashville_Housing_Data

ALTER TABLE portfolio.dbo.Nashville_Housing_Data
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress
